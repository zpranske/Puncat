%% Extract data and organize measure files
function[P_all, P] = processPuncta(puncta_files)
     disp('Combining puncta measure files...')
     %These are the headers the code expects the .csv files generated by 
     %Fiji to have. If they do not match, z coding will not work.
     puncta_format = [{'Var1'} {'Label'} {'Area'} {'Mean'} {'Min'} {'Max'} {'X'}...
         {'Y'} {'XM'} {'YM'} {'Perim_'} {'Feret'} {'IntDen'} {'RawIntDen'}...
         {'FeretX'} {'FeretY'} {'FeretAngle'} {'MinFeret'} {'MinThr'} {'MaxThr'}];
     
     warning('off','all')     
     P = [];
     for i = 1:length(puncta_files)
        temp_P = readtable([puncta_files(i).folder '\' puncta_files(i).name]);
        if~(temp_P.Properties.VariableNames == puncta_format)
            error(['Header format for file ' puncta_files(i).name ' is not correct!'])
        end;
        temp_P = renamevars(temp_P,'Var1','Puncta#');
        temp_P = [table(string(repmat(puncta_files(i).name,height(temp_P),1))) temp_P];
        temp_P = renamevars(temp_P,'Var1','Filename');
        P = [P; temp_P];
     end 
     
     disp('Preprocessing combined puncta measurement file...')

     p = [];
     for i=1:height(P)
        temp = strsplit(P.Filename(i),'_'); temp = temp(end); temp = strsplit(temp,'.');
        temp = temp(1); temp = str2num(temp); p = [p; temp];
     end
     P = [table(p) P];
     P = renamevars(P,'p','CodedFile#');
     
     %Copy info on ROI intensity from second half of table to first half
     P_upper = P(contains(P.Label, "Drawing"),:);
     P_lower = P(contains(P.Label, "Subtracted"),:);
     P_upper.Mean = P_lower.Mean;
     P_upper.Min = P_lower.Min;     
     P_upper.Max = P_lower.Max;
     P_orig = P;
     P = P_upper;
     
     %This code extracts cell z from the auto-generated label column in Fiji 
     %Measure files for puncta.
     label_bin = table();
     labels = string(P.Label);
     cell_num = 0;
     for i=1:length(labels)
        s = strsplit(labels(i),':');
        puncta_string = strsplit(s(2),'_');
        label_bin(i,1) = table(s(1));
        label_bin(i,2) = table(str2num(puncta_string(2)));
        coded_z = str2num(s(3));
        label_bin(i,3) = {coded_z};
        
        if i==1 cell_num = 1;
        elseif ~strcmp(label_bin{i,1}, label_bin{i-1,1})
                cell_num = 1;
        elseif label_bin{i,3}<label_bin{i-1,3} 
                cell_num = cell_num+1; 
        end
        label_bin(i,4) = {cell_num};
     end

     P = [P(:,1:4) label_bin(:,2:end) P(:,5:end)];
     P = renamevars(P,'Var2','ROI_#');
     P = renamevars(P,'Var3','ROI_Z');
     P = renamevars(P,'Var4','Cell_#');
     P.Unique_Z_ID_P = join(strcat([string(P.("CodedFile#")),...
         string(P.("Cell_#")),string(P.ROI_Z)]),"_");
     P = [P(:,1:7) P(:,end) P(:,8:end-1)];
     
     P = renamevars(P,'Mean','Mean_P');
     P = renamevars(P,'Perim_','Perim_P');
     P = renamevars(P,'Feret','Feret_P');
     P = renamevars(P,'FeretX','FeretX_P');
     P = renamevars(P,'FeretY','FeretY_P');
     P = renamevars(P,'FeretAngle','FeretAngle_P');
     P = renamevars(P,'MinFeret','MinFeret_P');
     P = renamevars(P,'IntDen','IntDen_P');
     
     P_all = P;
     
     %Get average puncta stats for all puncta in each slice of each cell
     P = varfun(@mean, P, 'GroupingVariables', 'Unique_Z_ID_P', 'InputVariables', @isnumeric);
 return